#!/usr/bin/env python3
import xml.etree.ElementTree as ET
import math
import mpu

vector_waypoints = [
    (48.1646633,11.5767492,13.129,0.0,0.0),
    (48.1646055,11.5767522,72.9,166.6643,0.092021696),
    (48.1646632,11.5767479,13.544,358.68234,0.29299784),
    (48.1646636,11.5767465,13.683,338.36725,0.026974797),
    (48.1645972,11.5767254,21.583,192.12012,0.66382706),
    (48.164626,11.576722,68.4,268.78558,0.06892547),
    (48.1646566,11.5767425,15.488,14.733863,0.038264528),
    (48.1646232,11.576735,60.0,188.45746,0.32336983),
    (48.1646654,11.5767504,12.168,17.182545,0.1813636),
    (48.1646558,11.5767447,13.658,32.772152,0.03540187),
    (48.1646472,11.5767451,14.019,176.69449,0.08280648),
    (48.1646392,11.5767411,15.343,196.48955,0.0911048),
    (48.1646605,11.5767466,13.033,9.303629,0.19838928),
    (48.1646579,11.5767451,13.21,222.39246,0.00984419),
    (48.1646561,11.5767451,13.21,183.08006,0.018864404),
    (48.1646574,11.5767405,13.878,290.84787,0.03284727),
    (48.1646657,11.5767502,12.805,36.14902,0.103760354),
    (48.1646662,11.5767519,13.047,54.77929,0.021268092),
    (48.1646684,11.5767515,12.03,357.3471,0.02395794),
    (48.1646658,11.5767508,12.946,190.75447,0.025524093),
    (48.1646694,11.5767528,12.039,20.108095,0.036628358),
    (48.164669,11.5767508,12.271,262.15097,0.012585228),
    (48.1646642,11.5767503,13.069,184.80655,0.048949566),
    (48.1646681,11.5767534,12.199,30.183638,0.04032039),
    (48.164671,11.5767537,11.961,6.468266,0.032566708),
    (48.1646706,11.5767525,12.06,257.06592,0.008192529),
    (48.1646712,11.5767538,11.852,53.649483,0.010158131),
    (48.1627275,11.576879,13.728,0.0,0.0),
    (48.1627168,11.5767692,11.579,268.2266,0.49185017),
    (48.1626951,11.5766576,23.673,0.0,0.0),
    (48.1627288,11.5768235,18.465,73.06382,0.054897517),
    (48.1627204,11.576887,11.048,101.04616,0.4075428),
    (48.1627273,11.5768367,14.491,281.6894,0.32157245),
    (48.1627004,11.5768125,16.923,217.22253,0.3217448),
    (48.1627098,11.5767941,11.651,290.38776,0.15414853),
    (48.1627036,11.5767704,11.419,251.07965,0.18213035),
    (48.1627071,11.5767646,11.676,317.76242,0.21389852),
    (48.1627125,11.5767671,20.135,59.338547,0.14836714),
    (48.1626916,11.5767518,13.747,103.155396,0.30754822),
    (48.1627209,11.5768959,16.493,69.2818,1.6232138),
    (48.1627907,11.5792919,14.255,87.61314,17.45517),
    (48.1625603,11.5818372,16.476,100.08586,8.693144),
    (48.1624986,11.5821822,14.187,103.36418,3.1874087),
    (48.1624791,11.5822133,15.977,118.0116,0.41828874),
    (48.1623801,11.5832193,17.68,94.51044,4.545046),
    (48.1622447,11.5841284,20.162,101.80839,6.0232515),
    (48.1621053,11.5853104,16.873,100.238235,7.7045965),
    (48.1619878,11.5854352,12.731,126.24859,2.0576284),
    (48.16205,11.5853873,16.898,341.0705,0.50820965),
    (48.1621495,11.5853189,21.983,335.71594,1.0156468),
    (48.1620502,11.5855271,21.194,126.84694,1.8812786),
    (48.1619516,11.5857436,31.69,124.733025,1.7546966),
    (48.1620087,11.5862043,51.946,86.27329,2.7231832),
    (48.162143,11.5863731,38.229,61.046497,1.9323461),
    (48.1621591,11.5866665,77.6,78.44073,1.9144386),
    (48.1621075,11.5865052,26.58,129.08348,0.21688642),
    (48.162312,11.5862252,23.972,317.7541,2.2275221),
    (48.1624716,11.5861894,26.698,343.8009,1.6825131),
    (48.1629848,11.5860999,87.6,352.61374,4.402221),
    (48.1638748,11.5863512,32.315,5.98326,7.111028),
    (48.1643151,11.5874949,48.9,49.652325,7.8779683),
    (48.165233,11.58649,16.902,342.67023,8.118814),
    (48.1662916,11.5863053,24.954,352.49475,10.627554),
    (48.1669373,11.5861877,19.848,352.907,7.345285),
    (48.1670801,11.5862741,19.879,9.794997,1.8382484),
    (48.1670238,11.5863077,19.769,134.60382,0.33689412),
    (48.1671929,11.5863326,22.957,7.71349,1.6539223),
    (48.1673909,11.5870683,12.727,64.856346,4.5729804),
    (48.167396,11.5871506,15.76,76.72719,0.8408794),
    (48.1451609,11.6155376,16.354,0.0,0.0),
    (48.145286,11.6155104,52.4,0.0,0.0),
    (48.1452319,11.615685,116.1,10.489999,0.18416464),
    (48.1454893,11.6156303,156.9,354.15997,1.683086),
    (48.1454,11.6155631,77.6,328.01743,0.53454953),
    (48.1453169,11.6166615,98.4,0.0,0.0),
    (48.1451817,11.617497,110.762,103.64713,1.4008272),
    (48.1450612,11.6181438,115.422,104.60409,2.12039),
    (48.1449944,11.6184782,111.127,104.71352,0.15390545),
    (48.1447796,11.6197511,122.4,104.19506,2.004629),
    (48.14475,11.6202824,122.4,101.08864,2.3499575),
    (48.1447548,11.62048,123.866,288.0853,0.5258423),
    (48.1446264,11.6206229,133.924,86.45779,0.08047667),
    (48.1447295,11.6200276,68.4,283.59912,5.7402825),
    (48.1444632,11.6220204,128.899,0.0,0.0),
    (48.1444687,11.6219357,125.299,275.54962,0.39289382),
    (48.144519,11.6213992,91.86,278.9475,2.0793462),
    (48.1446588,11.6212294,84.09,297.50504,1.7121847),
    (48.1446076,11.6210783,100.057,282.3572,1.4003763),
    (48.1446052,11.6209369,104.7,279.11093,1.2907047),
    (48.1447818,11.6203355,73.772,287.21054,2.060441),
    (48.1447355,11.6203353,60.857,282.70035,1.4363127),
    (48.144713,11.6202528,67.906,278.46738,0.96957254),
    (48.1447769,11.6199932,51.334,283.50165,1.1667202),
    (48.144865,11.6198555,63.467,291.66537,1.165028),
    (48.144948,11.6196426,40.443,297.30695,1.316668),
    (48.1450894,11.6195084,48.675,325.53827,1.5931695),
    (48.1451039,11.6192392,59.972,261.66766,2.872041),
    (48.1448788,11.6185745,19.272,239.7107,4.413993),
    (48.1448474,11.618283,25.458,260.34146,2.2921865),
    (48.1449949,11.6181333,26.921,291.11746,1.7831256),
    (48.1450821,11.6179784,30.518,297.48105,1.656148),
    (48.1451487,11.6178801,39.309,317.3226,1.2584091),
    (48.1452509,11.6179313,44.901,351.95166,1.2394552),
    (48.1453838,11.6178213,57.151,328.36502,1.4699388),
    (48.1453334,11.6176543,46.819,284.48514,1.1072909),
    (48.1454649,11.6174835,53.383,317.44125,1.7231747),
    (48.1453231,11.6171216,45.352,274.55154,1.7626841),
    (48.1451641,11.6169489,34.307,230.99948,1.7498425),
    (48.1452369,11.6167483,42.221,266.11206,1.3586473),
    (48.1453588,11.6165647,53.868,287.53833,1.3851273),
    (48.1454803,11.6164068,61.066,298.6022,1.4137014),
    (48.14559,11.6162594,69.568,304.08176,1.4324298),
    (48.1455862,11.6160481,75.513,294.88528,1.3613311),
    (48.1451667,11.6166798,39.313,174.16628,0.5667352),
    (48.1454786,11.6156302,48.458,283.39307,1.9418013),
    (48.1453555,11.6153921,89.636,269.92487,1.8038698),
    (48.1452647,11.6153875,110.554,260.93915,1.4066448),
    (48.1450394,11.6154234,44.381,235.01808,1.2458296),
    (48.1445859,11.6155122,45.044,202.93755,1.6491864),
    (48.1448251,11.6157755,51.563,181.86723,0.5233531),
    (48.1447104,11.6162848,54.284,128.14188,1.1281515),
    (48.1445015,11.6164493,90.627,138.44495,1.4099648),
    (48.1444448,11.6162526,71.19,157.09953,1.0279883),
    (48.1444163,11.6161823,104.1,166.30406,0.82265735),
    (48.1442586,11.6163292,104.636,158.9417,0.84221804),
    (48.1441267,11.6161648,110.554,180.71239,0.9171889),
    (48.1440007,11.6160947,115.545,204.95709,1.5656905),
    (48.143053,11.6155507,112.327,200.55551,6.765223),
    (48.1433675,11.615825,134.116,23.359549,0.3188709),
    (48.1426752,11.6149511,116.971,218.9202,5.63541),
    (48.1422418,11.6153739,94.334,185.85524,4.3541136),
    (48.1426495,11.6156991,94.654,149.8587,1.139077),
    (48.1428149,11.6158043,57.968,104.91868,0.62614536),
    (48.1425233,11.6153358,69.072,206.761,1.1139371),
    (48.1423912,11.6151311,80.985,214.29094,1.3330585),
    (48.142331,11.6150853,89.476,206.5882,0.6269798),
    (48.1428932,11.6155063,122.4,26.55339,4.069209),
    (48.1445342,11.6156544,30.334,6.3856387,10.926893),
    (48.1459994,11.6157107,26.535,2.1132872,15.130595),
    (48.1473172,11.6158096,98.4,2.6927001,14.690267),
    (48.1484549,11.6162953,18.267,11.062585,14.4210205),
    (48.1486107,11.6162973,19.707,5.141193,2.8141687),
    (48.1487107,11.6160154,20.272,309.7156,2.1914167),
    (48.1497008,11.6163637,119.85,314.7376,0.011239815),
    (48.1502252,11.6161744,95.85,346.77216,4.686115),
    (48.1516653,11.6153695,98.4,340.41992,12.006109),
    (48.1522376,11.6146145,92.9,331.63913,10.034805),
    (48.1522995,11.6144566,77.6,328.41458,5.870149),
    (48.1521947,11.6145047,90.85,324.24542,2.0722148),
    (48.1523398,11.6143825,82.5,327.67914,1.9293605),
    (48.1522538,11.613389,104.916,273.5625,4.3588696),
    (48.1525875,11.6134071,110.0,340.2038,2.7472544),
    (48.1529962,11.6142326,52.4,38.224987,4.424625),
    (48.1532102,11.6138114,104.1,300.34082,3.7011683),
    (48.1557136,11.6067452,128.899,0.0,0.0),
    (48.1620523,11.5977355,110.0,0.0,0.0),
    (48.1650291,11.5944135,104.1,0.0,0.0),
    (48.1654125,11.5928943,28.614,290.72708,3.46674),
    (48.1660232,11.5918749,19.783,310.90683,9.21509),
    (48.166359,11.5906761,17.111,295.40836,8.711093),
    (48.1664702,11.590518,26.804,306.99203,2.6284683),
    (48.1664887,11.590639,26.747,20.704084,0.5549959),
    (48.1664523,11.5907226,23.397,110.66484,0.5143633),
    (48.1665278,11.59066,23.396,337.35007,2.1310153),
    (48.1669926,11.589348,32.74,298.75888,9.198246),
    (48.167406,11.5882782,92.9,299.69427,9.105799),
    (48.1674268,11.5875476,21.127,284.5441,6.653132),
    (48.167304,11.5862165,25.821,264.22308,8.626223),
    (48.1667858,11.5863009,17.013,61.798855,2.7327304),
    (48.1668086,11.5863792,15.972,77.60098,0.38826677),
    (48.1666933,11.5862525,14.308,210.26611,3.6256764),
    (48.1665428,11.5860872,14.024,262.47833,0.950912),
    (48.1665272,11.5858155,17.856,279.4004,1.8658545),
    (48.1665813,11.5855099,18.182,303.70587,1.7991742),
    (48.1666417,11.5853164,15.267,260.31564,1.1257702),
    (48.1666081,11.5850877,16.341,244.38438,1.5942619),
    (48.1665314,11.5848665,17.679,206.53978,0.41269994),
    (48.166411,11.5848058,18.097,191.47566,2.9905095),
    (48.1662518,11.584763,14.972,177.34944,0.5812293),
    (48.1659184,11.5848556,26.587,168.27509,2.8788254),
    (48.1658192,11.5848142,27.272,175.37715,1.9183193),
    (48.1656875,11.5848781,27.237,171.09338,1.7653439),
    (48.1655116,11.5846927,31.411,187.41806,1.7767534),
    (48.1655296,11.5842346,29.945,220.25862,1.6166853),
    (48.1656811,11.5838708,21.379,251.71667,1.5093937),
    (48.1657676,11.5835676,25.076,293.151,2.0687478),
    (48.1657909,11.5833229,30.407,279.36414,1.753341),
    (48.165825,11.5830756,34.048,281.6464,1.8147808),
    (48.1659427,11.5828723,28.516,307.003,1.770842),
    (48.1660745,11.5826916,23.226,312.95874,1.7295824),
    (48.166116,11.582471,31.655,303.1406,1.6268952),
    (48.166073,11.5822808,35.79,282.37903,1.4039093),
    (48.1661875,11.5820366,31.508,315.96136,1.947966),
    (48.1662807,11.5818889,22.7,320.45065,1.8375964),
    (48.1663275,11.5815604,28.027,286.3759,2.1761642),
    (48.1663288,11.581337,26.611,279.26083,1.8820947),
    (48.1663775,11.5811553,26.798,283.1854,1.6796398),
    (48.1663291,11.5809693,21.582,272.3314,1.5199444),
    (48.1661716,11.5809343,27.545,249.79547,1.225577),
    (48.1659385,11.5810922,30.371,208.34506,1.129122),
    (48.165671,11.5810151,22.745,218.33777,2.295901),
    (48.1656807,11.5806245,22.094,259.0714,2.051251),
    (48.1656616,11.5803388,22.713,259.39114,1.9703193),
    (48.1657489,11.5800306,18.84,288.7984,2.207111),
    (48.1657729,11.5797931,22.134,284.20068,1.9367579),
    (48.1658177,11.5795718,21.168,285.08218,1.8131534),
    (48.1658842,11.5793721,25.844,298.82648,1.7175967),
    (48.1657785,11.5790764,25.112,259.49625,1.9605063),
    (48.1658182,11.5789203,22.895,286.68323,1.1368914),
    (48.1656752,11.5787635,26.531,213.52834,1.8195024),
    (48.1656487,11.5785702,32.459,237.72629,1.4269543),
    (48.1658013,11.5782408,28.257,276.7154,1.6158535),
    (48.1658654,11.5780122,24.778,282.1535,1.6244612),
    (48.1659042,11.5778387,21.026,283.77563,1.5392013),
    (48.165866,11.577655,21.531,274.75626,1.3963189),
    (48.1657896,11.5774448,18.467,242.92422,1.7900373),
    (48.1658572,11.5772109,20.666,289.52206,1.7370956),
    (48.1658673,11.5769611,21.931,262.39703,1.6112113),
    (48.1656647,11.5769484,22.229,178.15852,2.2405448),
    (48.1654637,11.5770608,22.881,166.03668,2.188931),
    (48.1652741,11.5770763,18.734,170.2104,2.1118457),
    (48.1651339,11.577086,21.552,178.45338,1.3159664),
    (48.1649779,11.577094,21.315,174.63757,1.6618451),
    (48.1648073,11.5770313,18.82,187.81343,1.8883018),
    (48.1646257,11.5770936,22.221,164.9848,2.0289097),
    (48.1644546,11.577168,23.399,155.03458,1.7998873),
    (48.1644028,11.5770235,17.871,253.60858,1.0707092),
    (48.1645098,11.5769498,13.972,0.0,0.0),
    (48.1644687,11.5767943,14.894,0.0,0.0),
    (48.1645224,11.5767789,16.314,14.211921,1.3515917),
    (48.1645837,11.5768037,18.731,15.801927,0.36987954),
    (48.1646505,11.5767586,12.939,0.0,0.0),
    (48.1645647,11.5767744,16.22,173.00385,1.7284594),
    (48.1646669,11.5767446,13.298,342.82922,0.7913897),
]

p1 = (48.167724, 11.577717)
p2 = (48.164869, 11.582820)


bounds = (
    min(p1[0], p2[0]),
    max(p1[0], p2[0]),
    min(p1[1], p2[1]),
    max(p1[1], p2[1])
)

bound_length = mpu.haversine_distance((p1[0], p1[1]), (p1[0], p2[1])) * 1000

print(bound_length)

scale_factor = 10

def node_check_bounds(lat, lon):
    return bounds[0] < lat < bounds[1] and bounds[2] < lon < bounds[3]

def lat_to_y(lat):
    return ((lat - bounds[0]) / (bounds[1] - bounds[0])) * scale_factor

def lon_to_x(lon):
    return ((lon - bounds[2]) / (bounds[3] - bounds[2])) * scale_factor

osm_file = ET.parse('munich.osm')
root_node = osm_file.getroot()

visible_nodes = {}
ways = []

# Find ways and nodes
for child in root_node:
    tag = child.tag
    if tag == 'node':
        if 'lat' in child.attrib and 'lon' in child.attrib:
            lat = float(child.attrib['lat'])
            lon = float(child.attrib['lon'])
            id = child.attrib['id']
            if node_check_bounds(lat, lon):
                visible_nodes[id] = (lat, lon)
    if tag == 'way':
        way_nodes = []
        way_type = 0
        for way_child in child:
            if way_child.tag == 'nd':
                ref = way_child.attrib['ref']
                if ref in visible_nodes:
                    node = visible_nodes[ref]
                    way_nodes.append(node)
            if way_child.tag == 'tag':
                if way_child.attrib['k'] == 'name':
                    way_type = 1
        if len(way_nodes) > 0:
            ways.append((way_type, way_nodes))

tikz_file = open('/home/matthias/Documents/Studium/BA/Arbeit/way.tex', 'w')
tikz_file.write('\\begin{tikzpicture}\n')

# Format for tikz
# Draw ways and structures
for way in ways:
    stmt = ''
    if way[0] == 0:
        stmt = '\draw[line width=0.02mm,  gray] '
    if way[0] == 1:
        stmt = '\draw[line width=0.2mm,  black] '

    for i, point in enumerate(way[1]):
        x = lon_to_x(point[1])
        y = lat_to_y(point[0])

        if i > 0:
            stmt += ' -- '

        stmt += '(' + str(x)[:6] + ',' + str(y)[:6] + ')'

    stmt += ';\n'
    tikz_file.write(stmt)

# Draw vector waypoints
for wp in vector_waypoints:
    if node_check_bounds(wp[0], wp[1]):
        x = lon_to_x(wp[1])
        y = lat_to_y(wp[0])

        bearing = wp[3]
        dir_x = math.sin((bearing / 360) * 2 * math.pi) * 0.3 + x
        dir_y = math.cos((bearing / 360) * 2 * math.pi) * 0.3 + y

        tikz_file.write('\\draw [red, fill=red] (' + str(x)[:6] + ',' + str(y)[:6] + ') circle (0.5mm);\n')
        tikz_file.write('\\draw [red!50] (' + str(x)[:6] + ',' + str(y)[:6] + ') circle (' + str((wp[2] / bound_length) * scale_factor) + ');\n')
        tikz_file.write('\\draw [-> width=0.7mm, red] (' + str(x)[:6] + ',' + str(y)[:6] + ') -- (' + str(dir_x)[:6] + ',' + str(dir_y)[:6] + ');\n')

tikz_file.write('\\end{tikzpicture}')
tikz_file.close()
